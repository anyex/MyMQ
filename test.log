'C++ attribute: no_unique_address(since C++20)' 'deduction guides for experimental::unique_resource' 'deduction guides for std::experimental::unique_resource' experimental::make_unique_resource_checked experimental::unique_resource experimental::unique_resource::get experimental::unique_resource::get_deleter 'experimental::unique_resource::operator=' 'experimental::unique_resource::operator->' 'experimental::unique_resource::operator*' experimental::unique_resource::release experimental::unique_resource::reset experimental::unique_resource::~unique_resource experimental::unique_resource::unique_resource forward_list::unique has_unique_object_representations has_unique_object_representations_v list::unique make_unique make_unique_for_overwrite mutex_type::~unique_lock mutex_type::unique_lock 'operator==(std::unique_ptr)' 'operator>=(std::unique_ptr)' 'operator!=(std::unique_ptr)' 'operator(std::unique_ptr)' 'operator==(unique_ptr)' 'operator>=(unique_ptr)' 'operator!=(unique_ptr)' 'operator(unique_ptr)' ranges::unique ranges::unique_copy ranges::unique_copy_result shared_ptr::unique std::experimental::make_unique_resource_checked std::experimental::unique_resource std::experimental::unique_resource::get std::experimental::unique_resource::get_deleter 'std::experimental::unique_resource::operator=' 'std::experimental::unique_resource::operator->' 'std::experimental::unique_resource::operator*' std::experimental::unique_resource::release std::experimental::unique_resource::reset std::experimental::unique_resource::~unique_resource std::experimental::unique_resource::unique_resource std::forward_list::unique std::has_unique_object_representations std::has_unique_object_representations_v std::list::unique std::make_unique std::make_unique_for_overwrite std::mutex_type::~unique_lock std::mutex_type::unique_lock std::ranges::unique std::ranges::unique_copy std::ranges::unique_copy_result std::shared_ptr::unique 'std::swap(std::unique_lock)' 'std::swap(std::unique_ptr)' std::unique std::unique_copy std::unique_lock std::unique_lock::lock std::unique_lock::mutex 'std::unique_lock::operator=' 'std::unique_lock::operator bool' std::unique_lock::owns_lock std::unique_lock::release std::unique_lock::swap std::unique_lock::try_lock std::unique_lock::try_lock_for std::unique_lock::try_lock_until std::unique_lock::~unique_lock std::unique_lock::unique_lock std::unique_lock::unlock std::unique_ptr std::unique_ptr::get std::unique_ptr::get_deleter 'std::unique_ptr::operator<<' 'std::unique_ptr::operator=' 'std::unique_ptr::operator->' 'std::unique_ptr::operator[]' 'std::unique_ptr::operator*' 'std::unique_ptr::operator bool' std::unique_ptr::release std::unique_ptr::reset std::unique_ptr::swap std::unique_ptr::~unique_ptr std::unique_ptr::unique_ptr 'swap(unique_lock)' 'swap(unique_ptr)' unique unique_copy unique_lock unique_lock::lock unique_lock::mutex 'unique_lock::operator=' 'unique_lock::operator bool' unique_lock::owns_lock unique_lock::release unique_lock::swap unique_lock::try_lock unique_lock::try_lock_for unique_lock::try_lock_until unique_lock::~unique_lock unique_lock::unique_lock unique_lock::unlock unique_ptr unique_ptr::get unique_ptr::get_deleter 'unique_ptr::operator<<' 'unique_ptr::operator=' 'unique_ptr::operator->' 'unique_ptr::operator[]' 'unique_ptr::operator*' 'unique_ptr::operator bool' unique_ptr::release unique_ptr::reset unique_ptr::swap unique_ptr::~unique_ptr unique_ptr::unique_ptr
